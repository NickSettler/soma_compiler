/**
 * Global predefined types
 * @file: types.h
 * @date: 13.12.2022
 */

#ifndef SOMA_COMPILER_TYPES_H
#define SOMA_COMPILER_TYPES_H

typedef enum {
    // System types
    LEX_TOKEN_EOF,
    LEX_TOKEN_IDENTIFIER,
    LEX_TOKEN_SEMICOLON,

    // Bracket types
    LEX_TOKEN_LEFT_PARENTHESIS,
    LEX_TOKEN_RIGHT_PARENTHESIS,
    LEX_TOKEN_LEFT_SQUARE_BRACKET,
    LEX_TOKEN_RIGHT_SQUARE_BRACKET,
    LEX_TOKEN_LEFT_CURLY_BRACKET,
    LEX_TOKEN_RIGHT_CURLY_BRACKET,

    // Arithmetic operator types
    LEX_TOKEN_ASSIGN,
    LEX_TOKEN_PLUS,
    LEX_TOKEN_MINUS,
    LEX_TOKEN_MULTIPLY,
    LEX_TOKEN_DIVIDE,

    // Literal types
    LEX_TOKEN_INTEGER_LITERAL,
    LEX_TOKEN_FLOAT_LITERAL,

    // Keyword types
    LEX_TOKEN_CONST,
    LEX_TOKEN_VAR,
} LEXICAL_TOKEN_TYPE;

typedef enum {
    // System types
    SYN_NODE_SEQUENCE = 0x01,
    SYN_NODE_IDENTIFIER = 0x02,
    SYN_NODE_ASSIGNMENT = 0x04,

    // Operator types
    SYN_NODE_ADD = 0x08,
    SYN_NODE_SUB = 0x10,
    SYN_NODE_MUL = 0x20,
    SYN_NODE_DIV = 0x40,

    // Literal types
    SYN_NODE_INTEGER_LITERAL = 0x80,
    SYN_NODE_FLOAT_LITERAL = 0x100,
} SYNTAX_ANALYSIS_NODE_TYPE;

typedef enum {
    SYM_TABLE_TYPE_UNKNOWN = -0x01,
    SYM_TABLE_TYPE_INT = 0x01,
    SYM_TABLE_TYPE_FLOAT = 0x02,
} SYM_TABLE_DATA_TYPE;

#endif// SOMA_COMPILER_TYPES_H
